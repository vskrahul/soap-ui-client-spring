
package com.charter.enterprise.billing.csg.orders;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b14002
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "OrderServicePort", targetNamespace = "http://charter.com/enterprise/billing/csg/orders", wsdlLocation = "file:/D:/project/Git%20Lab/CSG-API/master/src/main/resources/wsdl/eai/OrderService.wsdl")
public class OrderServicePort
    extends Service
{

    private final static URL ORDERSERVICEPORT_WSDL_LOCATION;
    private final static WebServiceException ORDERSERVICEPORT_EXCEPTION;
    private final static QName ORDERSERVICEPORT_QNAME = new QName("http://charter.com/enterprise/billing/csg/orders", "OrderServicePort");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/D:/project/Git%20Lab/CSG-API/master/src/main/resources/wsdl/eai/OrderService.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        ORDERSERVICEPORT_WSDL_LOCATION = url;
        ORDERSERVICEPORT_EXCEPTION = e;
    }

    public OrderServicePort() {
        super(__getWsdlLocation(), ORDERSERVICEPORT_QNAME);
    }

    public OrderServicePort(WebServiceFeature... features) {
        super(__getWsdlLocation(), ORDERSERVICEPORT_QNAME, features);
    }

    public OrderServicePort(URL wsdlLocation) {
        super(wsdlLocation, ORDERSERVICEPORT_QNAME);
    }

    public OrderServicePort(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, ORDERSERVICEPORT_QNAME, features);
    }

    public OrderServicePort(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public OrderServicePort(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns OrderService
     */
    @WebEndpoint(name = "OrderService")
    public OrderService getOrderService() {
        return super.getPort(new QName("http://charter.com/enterprise/billing/csg/orders", "OrderService"), OrderService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns OrderService
     */
    @WebEndpoint(name = "OrderService")
    public OrderService getOrderService(WebServiceFeature... features) {
        return super.getPort(new QName("http://charter.com/enterprise/billing/csg/orders", "OrderService"), OrderService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (ORDERSERVICEPORT_EXCEPTION!= null) {
            throw ORDERSERVICEPORT_EXCEPTION;
        }
        return ORDERSERVICEPORT_WSDL_LOCATION;
    }

}
